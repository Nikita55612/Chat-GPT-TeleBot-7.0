from telebot.types import InlineKeyboardMarkup as tbMarkup, InlineKeyboardButton as tbButton
from config import Bot as cfg
from users import User as U
import typing
import gpt


class Ru:
    CLIENT_MARKUP = tbMarkup().add(
            tbButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"statistics"),
            tbButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"), row_width=2).add(
            tbButton("üíé", callback_data="payment"), row_width=1
        )
    STATISTICS_MARKUP = tbMarkup().add(
        tbButton("‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="load_history"),
        tbButton("üìà –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–∫–µ–Ω–æ–≤", callback_data="statistics_"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="statistics_back_client"),
        tbButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="statistics"), row_width=2)
    
    STATISTICS_MARKUP_ = tbMarkup().add(
        tbButton("‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="load_history"),
        tbButton("üìä –î–Ω–µ–≤–Ω–∞—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—Ä–æ—Å–æ–≤", callback_data="statistics"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="statistics_back_client"),
        tbButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="statistics_"), row_width=2)
    
    STAT_BACK_CLIENT_MARKUP = tbMarkup().add(tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="statistics_back_client"))

    CONTEXT_MARKUP = tbMarkup().add(
        tbButton("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç", callback_data="clear_context_"),
        tbButton("üîÇ –ú–∞–∫—Å. –±—É—Ñ–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", callback_data="context_buffer"),
        tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings"), row_width=2)
    
    PAYMENT_MARKUP = tbMarkup().add(
        tbButton("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="top_up_balance"),
        tbButton("üõí –ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", callback_data="buy_tokens"),
        tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="client"), row_width=1)
    
    BUY_TOKENS_MARKUP = tbMarkup().add(
        tbButton("10.000", callback_data="buy_tokens=10000"),
        tbButton("20.000", callback_data="buy_tokens=20000"),
        tbButton("50.000", callback_data="buy_tokens=50000"),
        tbButton("100.000", callback_data="buy_tokens=100000"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="payment"),
        tbButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="buy_tokens"), row_width=2)
    
    INSUFFICIENT_FUNDS_MARKUP = tbMarkup().add(
        tbButton("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="top_up_balance"),
        tbButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close"), row_width=1)
    
    CLOSE_MARKUP = tbMarkup().add(tbButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close"), row_width=1)

    CHECK_PAYMENT_BUTTON = tbButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="payment_verification")

    BACK_TO_PAYMENT_BUTTON = tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="payment")


class En:
    CLIENT_MARKUP = tbMarkup().add(
            tbButton("üìä Statistics", callback_data=f"statistics"),
            tbButton("‚öôÔ∏è Settings", callback_data="settings"), row_width=2).add(
            tbButton("üíé", callback_data="payment"), row_width=1
        )
    STATISTICS_MARKUP = tbMarkup().add(
        tbButton("‚¨áÔ∏è Load history", callback_data="load_history"),
        tbButton("üìà Token consumption chart", callback_data="statistics_"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è Back", callback_data="statistics_back_client"),
        tbButton("üîÑ Update", callback_data="statistics"), row_width=2)
    
    STATISTICS_MARKUP_ = tbMarkup().add(
        tbButton("‚¨áÔ∏è Load history", callback_data="load_history"),
        tbButton("üìä Daily request histogram", callback_data="statistics"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è Back", callback_data="statistics_back_client"),
        tbButton("üîÑ Update", callback_data="statistics_"), row_width=2)
    
    STAT_BACK_CLIENT_MARKUP = tbMarkup().add(tbButton("‚¨ÖÔ∏è Back", callback_data="statistics_back_client"))

    CONTEXT_MARKUP = tbMarkup().add(
        tbButton("üßπ Clear context", callback_data="clear_context_"),
        tbButton("üîÇ Max context buffer", callback_data="context_buffer"),
        tbButton("‚¨ÖÔ∏è Back", callback_data="settings"), row_width=2)
    
    PAYMENT_MARKUP = tbMarkup().add(
        tbButton("üí∞ Top up balance", callback_data="top_up_balance"),
        tbButton("üõí Buy tokens", callback_data="buy_tokens"),
        tbButton("‚¨ÖÔ∏è Back", callback_data="client"), row_width=1)
    
    BUY_TOKENS_MARKUP = tbMarkup().add(
        tbButton("10.000", callback_data="buy_tokens=10000"),
        tbButton("20.000", callback_data="buy_tokens=20000"),
        tbButton("50.000", callback_data="buy_tokens=50000"),
        tbButton("100.000", callback_data="buy_tokens=100000"), row_width=1).add(
        tbButton("‚¨ÖÔ∏è Back", callback_data="payment"),
        tbButton("üîÑ Update", callback_data="buy_tokens"), row_width=2)
    
    INSUFFICIENT_FUNDS_MARKUP = tbMarkup().add(
        tbButton("üí∞ Top up balance", callback_data="top_up_balance"),
        tbButton("‚ùå Close", callback_data="close"), row_width=1)
    
    CLOSE_MARKUP = tbMarkup().add(tbButton("‚ùå Close", callback_data="close"), row_width=1)

    CHECK_PAYMENT_BUTTON = tbButton("üîÑ Check payment", callback_data="payment_verification")

    BACK_TO_PAYMENT_BUTTON = tbButton("‚¨ÖÔ∏è Back", callback_data="payment")


ru = Ru
en = En


def get_change_model_markup(u: U | typing.Any) -> tbMarkup:
    markup = tbMarkup(row_width=1)
    for m in gpt.models.list_:
        markup.add(tbButton(f"‚úÖ {m}" if u.profile.model == m else m, callback_data=f"model={m}"))
    markup.add(tbButton("‚¨ÖÔ∏è Back" if u.profile.language == "en" else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings"))
    return markup


def get_context_buffer_markup(u: U | typing.Any) -> tbMarkup:
    markup = []
    context_buffer0 = "0 (Off)" if u.profile.language == "en" else "0 (–û—Ç–∫–ª.)"
    markup.append(tbButton(f"‚úÖ {context_buffer0}" if u.profile.max_context_buffer == 0 else context_buffer0, 
                           callback_data=f"context_buffer=0"))
    for i in range(1, 6):
        markup.append(tbButton(f"‚úÖ {i}" if u.profile.max_context_buffer == i else f"{i}", callback_data=f"context_buffer={i}"))
    markup = tbMarkup().add(*markup, row_width=2)
    markup.add(tbButton("‚¨ÖÔ∏è Back" if u.profile.language == "en" else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="context"))
    return markup


def get_settings_markup(u: U | typing.Any) -> tbMarkup:
    if u.profile.language == "en":
        return tbMarkup(row_width=1).add(
            tbButton("üß¨ Change model", callback_data=f"change_model"),
            tbButton("üìù Context", callback_data="context"),
            tbButton("üá¨üáß en", callback_data=f"language"),
            tbButton("‚¨ÖÔ∏è Back", callback_data="client")
        )
    else:
        return tbMarkup(row_width=1).add(
            tbButton("üß¨ –ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data=f"change_model"),
            tbButton("üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç", callback_data="context"),
            tbButton("üá∑üá∫ ru", callback_data=f"language"),
            tbButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="client")
        )
    
def get_top_up_balance_markup(u: U | typing.Any) -> tbMarkup:
    payments_buttons = [tbButton(i, callback_data=f"create_invoice={cfg.PAYMENTS_BUTTONS[i]}") for i in cfg.PAYMENTS_BUTTONS]
    if u.profile.language == "en":
        return tbMarkup(row_width=1).add(
            *payments_buttons, row_width=2).add(En.BACK_TO_PAYMENT_BUTTON, row_width=1)
    else:
        return tbMarkup(row_width=1).add(
            *payments_buttons, row_width=2).add(Ru.BACK_TO_PAYMENT_BUTTON, row_width=1)
    
def get_pay_markup(u: U | typing.Any, url: str, pay: float) -> tbMarkup:
    if u.profile.language == "en":
        return tbMarkup(row_width=1).add(
            tbButton(f"Pay {pay}", url),
            tbButton("üîÑ Check payment", callback_data="payment_verification")
        )
    else:
        return tbMarkup(row_width=1).add(
            tbButton(f"–û–ø–ª–∞—Ç–∏—Ç—å {pay}", url),
            tbButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="payment_verification")
        )
    
def get_try_gpt_request_again_markup(u: U | typing.Any, prompt: str) -> tbMarkup:
    if u.profile.language == "en":
        return tbMarkup().add(tbButton("üîÑ Repeat request", callback_data=f"try_gpt_request_again={prompt}"))
    else:
        return tbMarkup().add(tbButton("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å", callback_data=f"try_gpt_request_again={prompt}"))
    
def get_confirm_buy_tokens_markup(u: U | typing.Any, tokens) -> tbMarkup:
    if u.profile.language == "en":
        return tbMarkup().add(
            tbButton("‚úÖ Confirm", callback_data=f"confirm_buy_tokens={tokens}"), 
            tbButton("‚õîÔ∏è Reject", callback_data="close"), row_width=2)
    else:
        return tbMarkup().add(
            tbButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_buy_tokens={tokens}"), 
            tbButton("‚õîÔ∏è –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="close"), row_width=2)
    





